{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOSidzAFMiZ5R9sVQEHHyKV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Cropping Images:\n","\n","This script takes an original pdf transforms it to an images of 300 dpi (the least to have good performances of OCR) and crops the borders to minimize noice in text recognition."],"metadata":{"id":"1qQ3sg6YDEHz"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"pq8quQe46eCQ"},"outputs":[],"source":["## IDEA Cropping the image to improve orc quality\n"]},{"cell_type":"code","source":["# mount google colab\n","from google.colab import drive\n","drive.mount('/content/drive/')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FQF_aogn7NQJ","executionInfo":{"status":"ok","timestamp":1742380456219,"user_tz":-60,"elapsed":16767,"user":{"displayName":"Berta Llugany","userId":"01142724395779052531"}},"outputId":"166f0109-2b15-45a3-be49-ed606f49c4b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}]},{"cell_type":"code","source":["# Change this to your local directory\n","%cd /content/drive/MyDrive/2_FEINA/10_HU/01_TASKS/01_DIRECTORIES"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YXbOtuZQ7Txg","executionInfo":{"status":"ok","timestamp":1742380456517,"user_tz":-60,"elapsed":294,"user":{"displayName":"Berta Llugany","userId":"01142724395779052531"}},"outputId":"06eec5e7-057a-42b5-bd62-d86968f15cc8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/2_FEINA/10_HU/01_TASKS/01_DIRECTORIES\n"]}]},{"cell_type":"code","source":["!pip install pdf2image\n","!apt-get install poppler-utils"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"680wv-TB8bX_","executionInfo":{"status":"ok","timestamp":1742380470908,"user_tz":-60,"elapsed":14389,"user":{"displayName":"Berta Llugany","userId":"01142724395779052531"}},"outputId":"8637ffb6-ad72-4da6-f4b8-0037393deef5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pdf2image\n","  Downloading pdf2image-1.17.0-py3-none-any.whl.metadata (6.2 kB)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.11/dist-packages (from pdf2image) (11.1.0)\n","Downloading pdf2image-1.17.0-py3-none-any.whl (11 kB)\n","Installing collected packages: pdf2image\n","Successfully installed pdf2image-1.17.0\n","Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following NEW packages will be installed:\n","  poppler-utils\n","0 upgraded, 1 newly installed, 0 to remove and 29 not upgraded.\n","Need to get 186 kB of archives.\n","After this operation, 696 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 poppler-utils amd64 22.02.0-2ubuntu0.6 [186 kB]\n","Fetched 186 kB in 1s (243 kB/s)\n","Selecting previously unselected package poppler-utils.\n","(Reading database ... 125044 files and directories currently installed.)\n","Preparing to unpack .../poppler-utils_22.02.0-2ubuntu0.6_amd64.deb ...\n","Unpacking poppler-utils (22.02.0-2ubuntu0.6) ...\n","Setting up poppler-utils (22.02.0-2ubuntu0.6) ...\n","Processing triggers for man-db (2.10.2-1) ...\n"]}]},{"cell_type":"code","source":["# Import libraries\n","import cv2\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from pdf2image import convert_from_path\n","import os\n","from os import path"],"metadata":{"id":"j3jwnDB57VCo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Displaying images function:\n","#https://stackoverflow.com/questions/28816046/\n","#displaying-different-images-with-actual-size-in-matplotlib-subplot\n","def display(im_path):\n","    dpi = 80\n","    im_data = plt.imread(im_path)\n","\n","    height, width  = im_data.shape[:2]\n","\n","    # What size does the figure need to be in inches to fit the image?\n","    figsize = width / float(dpi), height / float(dpi)\n","\n","    # Create a figure of the right size with one axes that takes up the full figure\n","    fig = plt.figure(figsize=figsize)\n","    ax = fig.add_axes([0, 0, 1, 1])\n","\n","    # Hide spines, ticks, etc.\n","    ax.axis('off')\n","\n","    # Display the image.\n","    ax.imshow(im_data, cmap='gray')\n","\n","    plt.show()"],"metadata":{"id":"Ggd9eHuc9HHy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def cropping_images(pdf_path, temp_folder_path, cropped_folder_path):\n","\n","  # import all pages\n","  pages = convert_from_path(pdf_path, dpi=300)\n","\n","  for page_number, page in enumerate(pages, start = 0):\n","    print(f\"Processing page {page_number + 1}...\")\n","\n","\n","    # save the image to a temporary file\n","\n","    # Save the page as a temporary image\n","    temp_image_path = os.path.join(temp_folder_path, f\"page_{page_number + 1}.jpg\")\n","    page.save(temp_image_path, \"JPEG\")\n","\n","    # Convert the PpmImageFile object to a NumPy array\n","    image_np = np.array(page)\n","\n","    # Cropping image\n","    # I will use the same ROI for all images\n","    roi = image_np[350:3050, 300:2200] #\n","    cv2.imwrite(os.path.join(cropped_folder_path, f'page_{page_number + 1}.jpg'), roi)\n","\n","\n","\n"],"metadata":{"id":"ewUyZBHjqOCP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Run for each city and store the results in the \"Cropped\" folder\n","city = 'New York'\n","\n","if path.exists(f\"/content/drive/MyDrive/2_FEINA/10_HU/01_TASKS/01_DIRECTORIES/cropped/{city}\") == False:\n","  os.mkdir(f\"/content/drive/MyDrive/2_FEINA/10_HU/01_TASKS/01_DIRECTORIES/cropped/{city}\")\n","\n","cropped_folder_path = f\"/content/drive/MyDrive/2_FEINA/10_HU/01_TASKS/01_DIRECTORIES/temp/{city}\""],"metadata":{"id":"ry4eGwzZ7Von"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","pdf_path = f\"entry/{city}/{city}.pdf\"\n","temp_folder_path = f\"temp/{city}\"\n","cropped_folder_path = f\"cropped/{city}\""],"metadata":{"id":"mkeibal9am-J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cropping_images(pdf_path, temp_folder_path, cropped_folder_path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KFbASyElairy","executionInfo":{"status":"ok","timestamp":1742381376208,"user_tz":-60,"elapsed":37673,"user":{"displayName":"Berta Llugany","userId":"01142724395779052531"}},"outputId":"314b5bdf-6dcc-4b6a-9d77-abbcb3e0c1a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processing page 1...\n","Processing page 2...\n","Processing page 3...\n","Processing page 4...\n","Processing page 5...\n","Processing page 6...\n","Processing page 7...\n","Processing page 8...\n","Processing page 9...\n","Processing page 10...\n","Processing page 11...\n","Processing page 12...\n","Processing page 13...\n","Processing page 14...\n","Processing page 15...\n","Processing page 16...\n","Processing page 17...\n","Processing page 18...\n","Processing page 19...\n","Processing page 20...\n","Processing page 21...\n","Processing page 22...\n","Processing page 23...\n"]}]}]}